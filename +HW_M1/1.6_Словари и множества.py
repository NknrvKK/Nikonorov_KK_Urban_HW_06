"""
1. В проекте, где вы решаете домашние задания, создайте модуль 'homework6.py' и напишите весь код в нём.
2. Работа со словарями:
  - Создайте переменную my_dict и присвойте ей словарь из нескольких пар ключ-значение.
Например: Имя(str)-Год рождения(int).
  - Выведите на экран словарь my_dict.
  - Выведите на экран одно значение по существующему ключу, одно по отсутствующему
  из словаря my_dict без ошибки.
  - Добавьте ещё две произвольные пары того же формата в словарь my_dict.
 - Удалите одну из пар в словаре по существующему ключу из словаря my_dict и выведите
 значение из этой пары на экран.
  - Выведите на экран словарь my_dict.
"""
my_dict = {"Здесь": "Кот", "Там их": 2, "Завтра будет": 6}
print(my_dict)
# Добавление новых пар в словарь
my_dict["Котят уже"], my_dict["А д.б."] = 8, 10
my_dict["Ух ты"] = True
my_dict["Вау!"] = False
print(my_dict)
# Удаление пар в словарь
print(my_dict.pop("Котят уже"))
del my_dict["Ух ты"]
print(my_dict)
print(my_dict.values())
print(my_dict.keys())
print(my_dict.items())

"""
3. Работа с множествами:
  - Создайте переменную my_set и присвойте ей множество, состоящее из разных типов
  данных с повторяющимися значениями.
  - Выведите на экран множество my_set (должны отобразиться только уникальные значения).
  - Добавьте 2 произвольных элемента в множество my_set, которых ещё нет.
  - Удалите один любой элемент из множества my_set.
  - Выведите на экран измененное множество my_set.
"""

"""
Пусть у нас есть множество:
st = {'a', 'b', 'c', 'd'}
Если передать в метод строку, то она добавится к множеству как список элементов. 
Давайте добавим в множество строку 'xyz':
st.update('xyz')
print(st) # выведет {'z', 'y', 'd', 'c', 'x', 'a', 'b'}
В параметре метода update можно задавать списки для добавления в множество:
st.update(['1', '2', '3'])
print(st) # выведет {'1', 'b', 'a', 'd', 'c', '3', '2'}
Элементы кортежей также можно добавить в множество:
st.update((1, 2, 3))
print(st) # выведет {'a', 'c', 1, 2, 3, 'd', 'b'}
А вот при передаче словарей в множество добавятся только его ключи:
st.update({1: 'text1', 2: 'text2'})
print(st) # выведет {1, 'd', 2, 'a', 'b', 'c'}
"""
# my_set = set[1, True, 2, [1, 2, 3], 3, True, False, [1, 2, 3], None, {"Здесь": "Кот", "Там": 2}
# print(my_set)

my_set1 = {1, 2, 3, 4, 5, 6, 7, 6, 1, 2, 3, 4, 5, 1, 2}
my_set2 = {True, 1, 1, 1, 0, 0, 3, 4, False, 6, None, 6, 2, 3, 4, 5, 2}
# С помощью метода add можно добавлять элементы в множество по одному. Но,
# когда нужно добавить сразу несколько элементов, применяется метод update
# - вводим строку в аргумент.
my_set2.add(10), my_set2.add(100)
my_set2.update({'car', 'cat'})
my_set2.update('car', 'cat')
my_set2.update((101, 130, 123))
print(my_set1)
print(my_set2) # Отметим, что во множествах 1 == True, а False == 0,
# поскольку hash(1) == hash(True), hash(False) == hash(0)
print(hash(1) == hash(True)) # True
print(hash(False) == hash(0)) # True
my_set2.remove(2), my_set2.remove(3), my_set2.remove(4)
print(my_set2)

